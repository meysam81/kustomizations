---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: oathkeeper-maester
    app.kubernetes.io/instance: oathkeeper-maester
  name: oathkeeper-maester
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: oathkeeper-maester
      app.kubernetes.io/instance: oathkeeper-maester
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: oathkeeper-maester
        app.kubernetes.io/instance: oathkeeper-maester
    spec:
      automountServiceAccountToken: true
      containers:
        - args:
            - "--metrics-addr=0.0.0.0:8080"
            - controller
            - "--rulesConfigmapName=oathkeeper-rules"
            - "--rulesConfigmapNamespace=$(POD_NAMESPACE)"
          command:
            - /manager
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          image: oryd/oathkeeper-maester
          livenessProbe:
            failureThreshold: 5
            initialDelaySeconds: 1
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: metrics
            timeoutSeconds: 1
          name: oathkeeper-maester
          ports:
            - containerPort: 8080
              name: metrics
              protocol: TCP
          readinessProbe:
            failureThreshold: 5
            initialDelaySeconds: 1
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: metrics
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 65534
            runAsNonRoot: true
            runAsUser: 65534
            seLinuxOptions:
              level: s0:c123,c456
            seccompProfile:
              type: RuntimeDefault
      initContainers:
        - command:
            - /bin/sh
            - "-c"
            - |
              set -eux

              cm=$(kubectl get configmap oathkeeper-rules -n $POD_NAMESPACE -o jsonpath='{.metadata.name}' 2>/dev/null || true)

              cat <<'EOF' > access-rules.json
              []
              EOF

              if [ -z "$cm" ]; then
                kubectl create configmap oathkeeper-rules --from-file=access-rules.json -n $POD_NAMESPACE
              else
                echo "ConfigMap/oathkeeper-rules already present"
              fi
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          image: bitnami/kubectl
          name: initial-rules
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 65534
            runAsNonRoot: true
            runAsUser: 65534
            seLinuxOptions:
              level: s0:c123,c456
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - mountPath: /tmp
              name: tmp
          workingDir: /tmp
      securityContext:
        fsGroup: 65534
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: oathkeeper-maester
      terminationGracePeriodSeconds: 120
      volumes:
        - emptyDir: {}
          name: tmp
